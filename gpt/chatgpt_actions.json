{
  "openapi": "3.1.0",
  "info": {
    "title": "Financial Analytics API",
    "description": "API for analyzing user-uploaded CSV files: XMetric, YMetric, and Portfolio analysis",
    "version": "v1.0.0"
  },
  "servers": [
    {
      "url": "https://ectypal-tonya-unthinning.ngrok-free.dev"
    }
  ],
  "paths": {
    "/xmetric/data": {
      "post": {
        "description": "Analyze CSV data uploaded by user. When user uploads a CSV file to ChatGPT, read it with Code Interpreter and send the data here.",
        "operationId": "analyzeXMetricFromData",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "csv_data": {
                    "type": "array",
                    "description": "List of row dictionaries from the uploaded CSV file",
                    "items": {
                      "type": "object",
                      "description": "Row data as key-value pairs"
                    }
                  },
                  "date_column": {
                    "type": "string",
                    "description": "Column name for dates",
                    "example": "date"
                  },
                  "value_column": {
                    "type": "string",
                    "description": "Column name for numeric values to analyze",
                    "example": "close"
                  },
                  "aggregation": {
                    "type": "string",
                    "enum": ["none", "sum", "mean", "max", "min"],
                    "default": "none",
                    "description": "Aggregation method (case-insensitive)"
                  },
                  "scale_factor": {
                    "type": "number",
                    "default": 1.0,
                    "minimum": 0,
                    "description": "Scaling factor"
                  }
                },
                "required": ["csv_data", "date_column", "value_column"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Analysis results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "series": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {"type": "string"},
                          "value": {"type": "number"}
                        }
                      }
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "mean": {"type": "number"},
                        "count": {"type": "integer"}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ymetric/data": {
      "post": {
        "description": "Analyze CSV data uploaded by user. When user uploads a CSV file to ChatGPT, read it with Code Interpreter and send the data here.",
        "operationId": "analyzeYMetricFromData",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "csv_data": {
                    "type": "array",
                    "description": "List of row dictionaries from the uploaded CSV file",
                    "items": {
                      "type": "object",
                      "description": "Row data as key-value pairs"
                    }
                  },
                  "date_column": {
                    "type": "string",
                    "description": "Column name for dates",
                    "example": "date"
                  },
                  "value_column": {
                    "type": "string",
                    "description": "Column name for numeric values to analyze",
                    "example": "volume"
                  },
                  "aggregation": {
                    "type": "string",
                    "enum": ["none", "sum", "mean", "max", "min"],
                    "default": "none",
                    "description": "Aggregation method"
                  },
                  "scale_factor": {
                    "type": "number",
                    "default": 1.0,
                    "minimum": 0
                  }
                },
                "required": ["csv_data", "date_column", "value_column"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Analysis results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "series": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {"type": "string"},
                          "value": {"type": "number"}
                        }
                      }
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "mean": {"type": "number"},
                        "count": {"type": "integer"}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/portfolio/data": {
      "post": {
        "description": "Process portfolio data sent directly as JSON. Use this when user uploads a file to ChatGPT and you need to send the parsed data to the API.",
        "operationId": "portfolioFromData",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "holdings": {
                    "type": "array",
                    "description": "Array of portfolio holdings with ticker and weight",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ticker": {
                          "type": "string",
                          "description": "Stock ticker symbol"
                        },
                        "weight": {
                          "type": "number",
                          "description": "Portfolio weight (can be percentage or decimal)",
                          "minimum": 0
                        }
                      },
                      "required": ["ticker", "weight"]
                    },
                    "example": [
                      {"ticker": "AAPL", "weight": 0.25},
                      {"ticker": "MSFT", "weight": 0.30},
                      {"ticker": "GOOGL", "weight": 0.45}
                    ]
                  },
                  "normalize_weights": {
                    "type": "boolean",
                    "default": true,
                    "description": "Normalize weights to sum to 1.0"
                  }
                },
                "required": ["holdings"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Portfolio processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ticker": {"type": "string"},
                          "weight": {"type": "number"}
                        }
                      }
                    },
                    "normalized": {"type": "boolean"},
                    "total_holdings": {"type": "integer"}
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}